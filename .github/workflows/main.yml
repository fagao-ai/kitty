name: Release App

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
    publish-tauri:
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                include:
                    - target: aarch64-apple-darwin
                      platform: macos-latest
                    - target: x86_64-apple-darwin
                      platform: macos-latest
                    - target: x86_64-unknown-linux-gnu
                      platform: ubuntu-22.04
                    - target: x86_64-pc-windows-msvc
                      platform: windows-latest

        runs-on: ${{ matrix.platform }}
        steps:
            - uses: actions/checkout@v3

            - name: Get version
              id: get_version
              uses: battila7/get-version-action@v2

            - name: setup node
              uses: actions/setup-node@v3
              with:
                  node-version: 18
            - name: Install PNPM
              run: npm i -g pnpm

            - name: install Rust stable
              uses: dtolnay/rust-toolchain@stable

            - name: Rust cache
              uses: swatinem/rust-cache@988c164c3d0e93c4dbab36aaf5bbeb77425b2894
              with:
                workspaces: packages/desktop
                shared-key: ${{ matrix.tauri-target }}-${{ hashFiles('packages/desktop/Cargo.lock') }}


            - name: install dependencies (ubuntu only)
              if: matrix.platform == 'ubuntu-22.04'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libwebkit2gtk-4.1-dev build-essential curl wget file libssl-dev libayatana-appindicator3-dev librsvg2-dev
            - name: install dependencies (mac only)
              if: matrix.platform == 'macos-latest'
              run: |
                  rustup target add ${{matrix.target}}

            - name: install frontend dependencies
              run: pnpm install # change this to npm or pnpm depending on which one you use

            - name: Build Tauri App
              uses: tauri-apps/tauri-action@dev
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tagName: kitty___VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
                  releaseName: 'kitty __VERSION__'
                  releaseBody: 'upgrade tauri to 2.0'
                  releaseDraft: false
                  prerelease: false
                  args: --target ${{matrix.target}}